{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Omniarium",
    "patterns": [
      {
        "include": "#comments"
      },
      {
        "include": "#keywords"
      },
      {
        "include": "#strings"
      },
      {
        "include": "#types"
      },
      {
        "include": "#variables"
      },
      {
        "include": "#filters"
      }
    ],
    "repository": {
      "comments": {
        "patterns": [
          {
            "name": "comment.line.double-slash.omniarium",
            "match": "\\/\\/.*$"
          },
          {
            "name": "comment.block.c.omniarium",
            "begin": "\\/\\*",
            "end": "\\*\\/"
          }
        ]
      },
      "keywords": {
        "patterns": [
          {
            "name": "keyword.control.omniarium",
            "match": "\\b(if|else|while|do|for|try|catch|switch|case|default|as|is|filter)\\b"
          },
          {
            "name": "keyword.control.memory.omniarium",
            "match": "\\b(lend|borrow|delete|call|new|self|type|traits)\\b"
          },
          {
            "name": "keyword.control.lib.omniarium",
            "match": "\\b(import|export|from|inject)\\b"
          },
          {
            "match": "\\b(return|break|continue|throw)\\b",
            "name": "keyword.control.flow.omniarium"
          }
        ]
      },
      "strings": {
        "name": "string.quoted.double.omniarium",
        "begin": "\"",
        "end": "\"",
        "patterns": [
          {
            "name": "constant.character.escape.omniarium",
            "match": "\\\\."
          }
        ]
      },
      "types": {
        "patterns": [
          {
            "name": "entity.name.type.omniarium",
            "match": "\\b(Byte|Short|Integer|Long|Float|Double|String|Char|Boolean|Error)\\b"
          },
          {
            "name": "entity.name.type.class.omniarium",
            "match": "\\b[A-Z][a-zA-Z0-9_-]*\\b"
          },
          {
            "name": "keyword.boolean.omniarium",
            "match": "\\b(true|false)\\b"
          },
          {
            "name": "string.quoted.single.omniarium",
            "match": "'(.*?)'"
          },
          {
            "name": "constant.numeric.omniarium",
            "match": "\\b\\d+(\\.\\d+)?\\b"
          },
          {
            "name": "keyword.constant.omniarium",
            "match": "\\$[a-z][a-zA-Z0-9_-]*"
          },
          {
            "name": "keyword.constant.omniarium",
            "match": "#[a-z][a-zA-Z0-9_\\.-]*"
          }
        ]
      },
      "variables": {
        "patterns": [
          {
            "name": "variable.other.omniarium",
            "match": "\\b[a-z][a-zA-Z0-9_-]*\\b"
          }
        ]
      },
      "filters": {
        "patterns": [
          {
            "name": "entity.name.tag.omniarium",
            "match": "@[\\w-]+"
          }
        ]
      }
    },
    "scopeName": "source.omniarium"
}